type LeaveHistory {
  id: Int!
  user: User!
  userId: Int!
  date: Time!
  reason: String
  type: LeaveType!
  status: LeaveStatus!
  approver: User
  approverId: Int
  createdAt: Time!
  updatedAt: Time!
}

enum LeaveType {
  day
  morning
  afternoon
}

enum LeaveStatus {
  applied
  accepted
  rejected
}

type Query{
  getMyLeaves():[LeaveHistory!]!
  getAppliedLeaves():[LeaveHistory!]!
}

type Mutation {
  makeLeaveHistory(date: String!, reason: String, type: LeaveType!): Boolean!
  changeLeaveStatus(leaveId: Int!, status: LeaveStatus!): Boolean!
}
